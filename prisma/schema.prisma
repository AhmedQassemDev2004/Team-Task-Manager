generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String       @id @default(cuid())
  username      String? @unique
  email     String       @unique
  password  String
  tasks     Task[]
  teams     TeamMember[]
  createdAt DateTime     @default(now())
}

model Team {
  id        String       @id @default(cuid())
  name      String
  members   TeamMember[]
  tasks     Task[]
  createdAt DateTime     @default(now())
}

model TeamMember {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  team   Team   @relation(fields: [teamId], references: [id])
  teamId String
  role   String // e.g., admin, member
}

model Task {
  id           String       @id @default(cuid())
  title        String
  content      String?
  status       String       @default("todo") // todo, in-progress, done
  priority     String       @default("medium") // low, medium, high
  assignedTo   User?        @relation(fields: [assignedToId], references: [id])
  assignedToId String?
  team         Team         @relation(fields: [teamId], references: [id])
  teamId       String
  subtasks     SubTask[]
  attachments  Attachment[]
  createdAt    DateTime     @default(now())
  dueDate      DateTime?
}

model SubTask {
  id        String   @id @default(cuid())
  title     String
  completed Boolean  @default(false)
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId    String
  createdAt DateTime @default(now())
}

model Attachment {
  id        String   @id @default(cuid())
  name      String
  url       String
  type      String
  size      Int
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId    String
  createdAt DateTime @default(now())
}
